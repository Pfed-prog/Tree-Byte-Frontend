# CodeRabbit Configuration for Tree-Byte Project
# This file configures how CodeRabbit analyzes and reviews your code

# Global settings
global:
  # Enable/disable CodeRabbit for this repository
  enabled: true
  
  # Set the default language for reviews
  language: "en"
  
  # Configure review behavior
  review:
    # Enable automatic reviews on pull requests
    auto_review: true
    
    # Enable inline comments
    inline_comments: true
    
    # Enable summary comments
    summary_comments: true
    
    # Set review depth to deep for comprehensive analysis
    depth: "deep"
    
    # Enable issue compliance checking
    issue_compliance: true
    
    # Enable architecture validation
    architecture_validation: true

# File patterns to include/exclude
files:
  # Include patterns
  include:
    - "app/**/*.{ts,tsx,js,jsx}"
    - "components/**/*.{ts,tsx,js,jsx}"
    - "hooks/**/*.{ts,tsx,js,jsx}"
    - "lib/**/*.{ts,js}"
    - "services/**/*.{ts,js}"
    - "data/**/*.{ts,js}"
    - "types/**/*.{ts,js}"
    - "*.{json,md,yaml,yml}"
    - "*.{css,scss}"
    - "*.{sql}"
  
  # Exclude patterns
  exclude:
    - "node_modules/**"
    - "dist/**"
    - "build/**"
    - ".next/**"
    - "coverage/**"
    - "*.min.js"
    - "*.bundle.js"
    - "package-lock.json"
    - "yarn.lock"
    - "pnpm-lock.yaml"
    - ".git/**"
    - "*.log"
    - "*.lock"

# Language-specific configurations
languages:
  typescript:
    # TypeScript/JavaScript specific settings
    enabled: true
    # Include type checking in reviews
    type_check: true
    # Check for common TypeScript issues
    lint_checks: true
    # Check for React/Next.js specific patterns
    react_patterns: true
    # Check for proper imports using @/
    import_validation: true
    
  sql:
    # SQL specific settings
    enabled: true
    # Check for SQL best practices
    best_practices: true

# Security settings
security:
  # Enable security scanning
  enabled: true
  
  # Check for common vulnerabilities
  vulnerability_scan: true
  
  # Check for secrets in code
  secret_scan: true
  
  # Check for dependency vulnerabilities
  dependency_scan: true
  
  # Check for Stellar blockchain security
  stellar_security: true

# Performance settings
performance:
  # Enable performance analysis
  enabled: true
  
  # Check for performance issues
  performance_scan: true
  
  # Check for memory leaks
  memory_leak_scan: true
  
  # Check for Next.js specific performance
  nextjs_performance: true

# Code quality settings
quality:
  # Enable code quality checks
  enabled: true
  
  # Check for code smells
  code_smells: true
  
  # Check for maintainability issues
  maintainability: true
  
  # Check for readability issues
  readability: true
  
  # Check for complexity issues
  complexity: true

# Custom rules and preferences
rules:
  # Enforce consistent naming conventions
  naming_conventions: true
  # Kebab-case for files, PascalCase for components, camelCase for variables
  file_naming: "kebab-case"
  component_naming: "PascalCase"
  variable_naming: "camelCase"
  constant_naming: "UPPER_SNAKE_CASE"
  
  # Check for proper error handling
  error_handling: true
  
  # Check for proper documentation (disabled as per requirements)
  documentation: false
  
  # Check for test coverage
  test_coverage: true
  
  # Check for accessibility issues
  accessibility: true
  
  # Architecture validation
  single_responsibility: true
  component_size_limit: 200  # Maximum lines per component
  page_orchestration: true   # Pages should orchestrate, not implement complex logic
  
  # Import validation
  absolute_imports: true     # Prefer @/ over relative paths
  import_grouping: true      # Group imports: libraries ‚Üí internals ‚Üí relatives
  
  # Code quality
  duplicate_code_detection: true
  cyclomatic_complexity: true
  function_length_limit: 50  # Maximum lines per function
  
  # Issue compliance
  issue_requirement_check: true
  change_traceability: true
  
  # Tree-Byte specific rules
  tree_adoption_flow: true   # Validate adoption flow components
  stellar_integration: true  # Validate Stellar blockchain integration
  nft_components: true       # Validate NFT-related components

# Project-specific settings
project:
  # Project type
  type: "fullstack"
  
  # Framework detection
  frameworks:
    - "nextjs"
    - "react"
    - "typescript"
    - "stellar"
    - "tailwindcss"
  
  # Database type
  database: "supabase"
  
  # Blockchain integration
  blockchain: "stellar"
  
  # Smart contracts
  smart_contracts: false
  
  # Tree adoption platform
  platform_type: "tree_adoption"

# Review templates
templates:
  # Custom review messages
  messages:
    security: "üîí Security review completed"
    performance: "‚ö° Performance review completed"
    quality: "‚ú® Code quality review completed"
    accessibility: "‚ôø Accessibility review completed"
    architecture: "üèóÔ∏è Architecture validation completed"
    issue_compliance: "‚úÖ Issue compliance check completed"
    naming: "üìù Naming conventions check completed"
    imports: "üì¶ Import structure validation completed"
    tree_adoption: "üå≥ Tree adoption flow validation completed"
    stellar: "‚≠ê Stellar integration validation completed"
  
  # Priority-based review messages
  priorities:
    high: "üö® HIGH PRIORITY ISSUE"
    medium: "‚ö†Ô∏è MEDIUM PRIORITY ISSUE"
    low: "‚ÑπÔ∏è LOW PRIORITY ISSUE"
  
  # Architecture-specific messages
  architecture:
    single_responsibility: "üîß Component has multiple responsibilities - consider splitting"
    large_component: "üìè Component exceeds size limit - consider refactoring"
    page_logic: "üé≠ Page contains complex logic - move to components/hooks"
    relative_imports: "üîÑ Use @/ imports instead of relative paths"
    adoption_flow: "üå± Adoption flow component needs validation"
    stellar_wallet: "üí≥ Stellar wallet integration needs review" 